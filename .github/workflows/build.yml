name: Release Please

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때 실행

permissions:
  contents: write  # 태그 및 릴리즈 생성 권한 부여
  pull-requests: write  # PR 생성 권한 (PR을 생성하는 설정을 사용하면 필요)

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      release_version: ${{ steps.release.outputs.release_version }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 전체 Git 히스토리 가져오기 (태그 포함)

      - name: Run Release Please (Auto Tagging)
        id: release
        uses: googleapis/release-please-action@v4
        with:
          release-type: simple  # 기본적인 버전 관리
          token: ${{ secrets.GITHUB_TOKEN }}
          skip-github-pull-request: true  # PR 없이 바로 태그 및 릴리즈 생성
          include-v-in-tag: true  # 'v1.0.0' 형식의 태그 생성

      - name: Show Release Outputs
        run: |
          echo "New version is ${{ steps.release.outputs.release_version }}"

      - name: Update version in gradle.properties
        if: steps.release.outputs.release_created == 'true'
        run: |
          echo "version=${{ steps.release.outputs.release_version }}" > gradle.properties
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add gradle.properties
          git commit -m "🔖 Bump version to ${{ steps.release.outputs.release_version }}"
          git push origin main

  build:
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.release_created == 'true'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Build Project
        run: ./gradlew build -x test

      - name: Upload Build Artifact to GitHub Release
        if: needs.release.outputs.release_created == 'true'
        run: |
          gh release upload v${{ needs.release.outputs.release_version }} build/libs/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}