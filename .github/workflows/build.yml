name: Build & Deploy zzic-api

on:
  push:
    branches:
      - main  # 메인 브랜치 푸시 시 실행

permissions:
  contents: write
  packages: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ 코드 체크아웃
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2️⃣ JDK 21 설치
      - name: Setup JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'

      # 3️⃣ Gradle 빌드 실행 (JAR 생성)
      - name: Build JAR
        run: |
          chmod +x gradlew
          ./gradlew clean build -x test

      # 4️⃣ JAR 파일을 GitHub Packages에 업로드
      - name: Upload JAR to GitHub Packages
        uses: actions/upload-artifact@v4
        with:
          name: zzic-api-jar
          path: build/libs/*.jar

      # 5️⃣ 프로젝트 이름 & 버전 정보 추출 (소문자로 변환)
      - name: Extract Project Name & Version
        id: extract_project_info
        run: |
          PROJECT_NAME=$(grep '^project_name=' gradle.properties | cut -d'=' -f2 | tr -d '[:space:]' | tr '[:upper:]' '[:lower:]')
          VERSION=$(grep '^version=' gradle.properties | cut -d'=' -f2 | tr -d '[:space:]')

          if [ -z "$PROJECT_NAME" ]; then PROJECT_NAME="default-project"; fi
          if [ -z "$VERSION" ]; then VERSION="1.0.0"; fi

          echo "PROJECT_NAME=$PROJECT_NAME" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # 6️⃣ Docker 이미지 빌드
      - name: Build Docker Image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/$PROJECT_NAME:$VERSION .

      # 7️⃣ GitHub Container Registry 로그인
      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # 8️⃣ Docker 이미지 푸시 (GHCR)
      - name: Push Docker Image to GHCR
        run: docker push ghcr.io/${{ github.repository_owner }}/$PROJECT_NAME:$VERSION